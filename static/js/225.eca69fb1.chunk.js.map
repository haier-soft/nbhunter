{"version":3,"file":"static/js/225.eca69fb1.chunk.js","mappings":"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","sources":["components/ChoiceFilter.tsx","components/Filter.tsx","components/Paginator/Pagination.tsx","components/Search.tsx","pages/CatalogPage.tsx"],"sourcesContent":["import { setFiltersAndInputs } from \"../redux/filters/actions\"\r\nimport { useAppDispatch } from \"../redux/store\"\r\n\r\ntype ChoiceFilterType = {\r\n  selectedFilters: Record<string,string>[]\r\n}\r\nconst ChoiceFilter: React.FC<ChoiceFilterType> = ({ selectedFilters }) => {\r\n  const dispatch = useAppDispatch()\r\n  const choiceItemOnCheck = (item: string, el: string) => {\r\n    let filterArr = [item, el]\r\n    dispatch(setFiltersAndInputs([...filterArr]))\r\n  }\r\n  return (\r\n    <div className=\"content-page__choice choice-filter\">\r\n      {selectedFilters.map((item,i) => <div onClick={()=>choiceItemOnCheck(item.translitname, item.translitvalue)} key={i} className=\"choice-filter__item\">\r\n        <span className=\"choice-filter__text\">{item.name}: {item.value}</span>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 460.775 460.775\">\r\n          <path d=\"M285.08,230.397L456.218,59.27c6.076-6.077,6.076-15.911,0-21.986L423.511,4.565c-2.913-2.911-6.866-4.55-10.992-4.55\r\n             c-4.127,0-8.08,1.639-10.993,4.55l-171.138,171.14L59.25,4.565c-2.913-2.911-6.866-4.55-10.993-4.55\r\n             c-4.126,0-8.08,1.639-10.992,4.55L4.558,37.284c-6.077,6.075-6.077,15.909,0,21.986l171.138,171.128L4.575,401.505\r\n             c-6.074,6.077-6.074,15.911,0,21.986l32.709,32.719c2.911,2.911,6.865,4.55,10.992,4.55c4.127,0,8.08-1.639,10.994-4.55\r\n             l171.117-171.12l171.118,171.12c2.913,2.911,6.866,4.55,10.993,4.55c4.128,0,8.081-1.639,10.992-4.55l32.709-32.719\r\n             c6.074-6.075,6.074-15.909,0-21.986L285.08,230.397z\"></path>\r\n         </svg>\r\n      </div>)}\r\n    </div>\r\n  )\r\n}\r\nexport default ChoiceFilter","import clsx from \"clsx\"\r\nimport Nouislider from \"nouislider-react\"\r\nimport { useEffect, useRef } from \"react\"\r\nimport { setData, setPriceEnd, setPriceStart } from \"../redux/filters/slice\"\r\nimport { FilterType, InputType } from \"../redux/filters/types\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/store\"\r\nimport { resetFiltersAndInputs, setFiltersAndInputs } from \"../redux/filters/actions\"\r\nimport smoothDrop from \"../utils/smoothDrop\"\r\n\r\ntype FilterPropType = {\r\n  start: number; \r\n  end: number; \r\n}\r\nconst Filter: React.FC<FilterPropType> = ({start, end}) => { \r\n  let nouisliderRef = useRef<any>()\r\n  const { inputs } = useAppSelector(state => state.filters)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const sliderOnUpdate = (e: any ) => {\r\n    console.log(e)\r\n    dispatch(setPriceStart(parseInt(e[0]))) \r\n    dispatch(setPriceEnd(parseInt(e[1])))\r\n    dispatch(setData())\r\n  }\r\n  const onChangeStartValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setPriceStart(Number(e.target.value.replace(/\\s/,\"\"))))\r\n    dispatch(setData())\r\n  }\r\n  const onChangeEndValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setPriceEnd(Number(e.target.value.replace(/\\s/,\"\"))))\r\n    dispatch(setData())\r\n  }\r\n  const inputOnCheck = (el: InputType, item: FilterType) => {\r\n    let filterArr = [item.translitname, el.translitvalue]\r\n    dispatch(setFiltersAndInputs([...filterArr]))  \r\n  }\r\n  const resetFilter = (event:React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    dispatch(resetFiltersAndInputs())\r\n  }\r\n  const filterDrop = (idx: number) => {\r\n    const secFilterHeader = document.querySelectorAll(\".section-filter__header\") as NodeListOf<HTMLElement>\r\n    const secFilterBody = document.querySelectorAll(\".section-filter__body\") as NodeListOf<HTMLElement>\r\n    smoothDrop(secFilterHeader[idx], secFilterBody[idx])\r\n  }\r\n  useEffect(() => {\r\n    nouisliderRef.current.noUiSlider.set([start,end]);\r\n  }, [start,end])\r\n  return (\r\n    <form onReset={(e)=> resetFilter(e)} action=\"\" name=\"form[]\" className=\"form-filter\">\r\n      <div className=\"form-filter__sections\">\r\n        <div className=\"form-filter__section section-filter form-filter__section--price price-sec\">\r\n          <div className=\"section-filter__title\">Ценовой диапазон</div>\r\n          <div className=\"price-filter\">\r\n              <div className=\"price-filter__slider\">\r\n                <Nouislider\r\n                  range={{ min: 0, max: 199999 }}\r\n                  start={[start, end]}\r\n                  connect\r\n                  onChange={sliderOnUpdate}\r\n                  instanceRef={instance => {\r\n                    if (instance && !nouisliderRef.current) {\r\n                      nouisliderRef.current = instance\r\n                    }}\r\n                  }/>           \r\n              </div>\r\n              <div className=\"price-filter__values\">\r\n                <div className=\"price-filter__item\">\r\n                  <span className=\"price-filter__label\">от</span>\r\n                  <input onChange={(e) => onChangeStartValue(e)} id=\"price-start\" type=\"text\" value={String(start).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \").trim()} />\r\n                </div>\r\n                <div className=\"price-filter__item\">\r\n                  <span className=\"price-filter__label\">до</span>\r\n                  <input onChange={(e) => onChangeEndValue(e)} id=\"price-end\" type=\"text\" value={String(end).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \").trim()} />\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        {inputs.map((item, i) => {\r\n          return (\r\n            <div key={item.name} className={clsx(\"form-filter__section section-filter\")}>\r\n              <div onClick={(e) => filterDrop(i)} className=\"section-filter__header\">\r\n                <span className=\"section-filter__title\">{item.name}</span>\r\n              </div>\r\n              <div className=\"section-filter__body\">\r\n                <div className=\"section-filter__items\">\r\n                {item.properties.map((el, i) => <label key={i} className={clsx(\"section-filter__item\", {\"opacity\": (!el.checked && el.count === 0) })}>\r\n                  <input onChange={() => inputOnCheck(el, item)} className=\"section-filter__input\" type=\"checkbox\" value={el.value} checked={el.checked} />\r\n                  <div className=\"section-filter__label\"><span>{el.value}</span><span className=\"section-filter__count\">&nbsp;({el.count})</span></div>\r\n                </label>)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <div className=\"form-filter__footer\">\r\n        <button type=\"reset\" className=\"btn form-filter__btn\">Очистить фильтр</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport default Filter\r\n","import React from \"react\"\r\nimport clsx from \"clsx\"\r\nimport { useAppDispatch } from \"../../redux/store\";\r\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\r\ntype PaginationProps = {\r\n  setPage: ActionCreatorWithPayload<number, string>;\r\n  totalCount: number;\r\n  currPage: number;\r\n  itemsPerPage: number\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps>= ({ setPage,totalCount, currPage, itemsPerPage }) => {\r\n  const dispatch = useAppDispatch()\r\n  let pagesList = []\r\n  let pagesCount = totalCount ? Math.ceil(totalCount / itemsPerPage) : 1\r\n  let pagesSiblingsList: number[] = []\r\n  let spread = \"...\"\r\n  let firstPage\r\n  let lastPage\r\n  if (pagesCount <= 5) {\r\n    firstPage = 1\r\n    lastPage = pagesCount\r\n  } else {\r\n    if (currPage <= 3) {\r\n      firstPage = 1\r\n      lastPage = 4\r\n    } else if (currPage + 1 === pagesCount) {\r\n      firstPage = currPage - 2\r\n      lastPage = currPage\r\n    } else if (currPage === pagesCount) {\r\n      firstPage = currPage - 3\r\n      lastPage = currPage - 1\r\n    } else {\r\n      firstPage = currPage - 1\r\n      lastPage = currPage + 1\r\n    }\r\n  }\r\n\r\n  for (let i = firstPage; i <= lastPage; i++) {\r\n    pagesSiblingsList.push(i)\r\n  }\r\n  if (pagesCount <= 5) {\r\n    pagesList.push(...pagesSiblingsList)\r\n  } else if (currPage >= 4) {\r\n    if (currPage + 2 < pagesCount) {\r\n      pagesList.push(1, spread, ...pagesSiblingsList, spread, pagesCount)\r\n    } else {\r\n      pagesList.push(1, spread, ...pagesSiblingsList, pagesCount)\r\n    }\r\n  } else if (currPage < 4) {\r\n    if (currPage + 2 < pagesCount) {\r\n      pagesList.push(...pagesSiblingsList, spread, pagesCount)\r\n    } else {\r\n      pagesList.push(...pagesSiblingsList, pagesCount)\r\n    }\r\n  }\r\n\r\n  const onChangePage = (item: number | string) => {\r\n    if (typeof item === \"number\") {\r\n      dispatch(setPage(item))\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: \"smooth\"\r\n    });\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button disabled={currPage === 1} onClick={() => dispatch(setPage(currPage - 1))} className=\"pagination__arrow pagination__arrow-prev\"></button>\r\n      <ul className=\"pagination__items\">\r\n        {pagesList.map((item: string | number, i: number) => <li key={i} onClick={() => onChangePage(item)} className={clsx(\"pagination__item\", { \"active\": currPage === item, \"disable\": item === \"...\" })}>\r\n          <span className=\"pagination__link\">{item}</span>\r\n        </li>)}\r\n      </ul>\r\n      <button disabled={currPage === pagesCount} onClick={() => dispatch(setPage(currPage + 1))} className=\"pagination__arrow pagination__arrow-next\"></button>\r\n    </div>\r\n  )\r\n}\r\nexport default Pagination","import { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setSearchValue } from \"../redux/filters/slice\"\r\nimport { useAppSelector } from \"../redux/store\"\r\n\r\nconst Search:React.FC = () => {\r\n  const {searchValue} = useAppSelector(state=> state.filters)\r\n  const [value, setValue] = useState<string>(searchValue)\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n  const isChanged = useRef(false)\r\n  const dispatch = useDispatch()\r\n  const onChangeValue = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n    isChanged.current = true\r\n  }\r\n  useEffect(()=>{\r\n    setValue(searchValue)\r\n  },[searchValue])\r\n  \r\n  useEffect(()=>{\r\n    if (isChanged.current) {\r\n      let timer = setTimeout(() => {\r\n        dispatch(setSearchValue(value))\r\n      }, 500);\r\n      return () => clearTimeout(timer)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps \r\n  },[value]) \r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__inner\">\r\n        <div className=\"search__label\">Что ищем?<span></span></div>\r\n        <div className=\"search__input\">\r\n          <input onChange={(e)=>onChangeValue(e)} ref={inputRef} type=\"text\" value={value}/>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport default Search","import { useEffect, useMemo, useRef } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\"\r\nimport ChoiceFilter from \"../components/ChoiceFilter\"\r\nimport Filter from \"../components/Filter\"\r\nimport Pagination from \"../components/Paginator/Pagination\"\r\nimport ProductBlock from \"../components/ProductBlock/ProductBlock\"\r\nimport Skeleton from \"../components/ProductBlock/Skeleton\"\r\nimport Search from \"../components/Search\"\r\nimport Sort from \"../components/Sort\"\r\nimport { fetchFiltersProducts } from \"../redux/filters/actions\"\r\nimport { setData, setFilters, setPage, setSort } from \"../redux/filters/slice\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/store\"\r\n\r\nconst CatalogPage: React.FC = () => {\r\n  const { items, totalCount, currPage, itemsPerPage, searchValue, sortProperty, orderProperty, filters, inputs, priceStart, priceEnd } = useAppSelector(state => state.filters)\r\n  const dispatch = useAppDispatch()\r\n  let isMounted = useRef(false)\r\n  const filterInnerRef = useRef<HTMLDivElement>(null)\r\n  const navigate = useNavigate()\r\n  const searchParams = useSearchParams()[0].entries()\r\n  let selectedFilters: Record<string, string>[] = []\r\n  const filterIconOnClick = () => {\r\n    const filterCat = document.querySelector(\".filter-cat\") as HTMLElement\r\n    const filterCatIcon = document.querySelector(\".filter-cat__icon\") as HTMLElement\r\n    filterCat.classList.add(\"active\");\r\n    document.body.classList.add(\"no-scroll\");\r\n    filterCat.addEventListener(\"click\", (e: MouseEvent) => {\r\n      let _e = e as MouseEvent & {path: Node[]}\r\n      if (filterInnerRef.current && !_e.path.includes(filterInnerRef.current)) {\r\n        filterCat.classList.remove(\"active\");\r\n        document.body.classList.remove(\"no-scroll\");\r\n      }\r\n    })\r\n    filterCatIcon.addEventListener(\"click\", () => {\r\n      filterCat.classList.remove(\"active\");\r\n      document.body.classList.remove(\"no-scroll\");\r\n    })\r\n\r\n  }\r\n  inputs.forEach(item => {\r\n    let foundItems = item.properties.filter(el => el.checked === true)\r\n    if (foundItems.length > 0) {\r\n      foundItems.forEach(el => {\r\n        selectedFilters = [...selectedFilters, {\r\n          name: item.name,\r\n          translitname: item.translitname,\r\n          value: el.value,\r\n          translitvalue: el.translitvalue\r\n        }]\r\n      })\r\n    }\r\n  })\r\n  let filterItems = useMemo(() => {\r\n    return filters.map(item => {\r\n      return item.values.map(el => item.name + \".1=\" + el).join(\"&\")\r\n    })\r\n  }, [filters])\r\n  useEffect(() => {\r\n    let params = {\r\n      currPage,\r\n      itemsPerPage,\r\n      searchValue,\r\n      sortProperty,\r\n      orderProperty,\r\n      filterItems,\r\n      priceStart,\r\n      priceEnd\r\n    }\r\n    dispatch(fetchFiltersProducts(params))\r\n    if (isMounted.current) {\r\n      navigate(`?${filterItems.length > 0 ? `${filterItems.join(\"&\")}&` : \"\"}${searchValue ? `q=${searchValue}&` : \"\"}price_gte=${priceStart}&price_lte=${priceEnd}&_page=${currPage}&_limit=${itemsPerPage}&_sort=${sortProperty}&_order=${orderProperty}`)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currPage, itemsPerPage, searchValue, sortProperty, orderProperty, filters, priceStart, priceEnd])\r\n  useEffect(() => {\r\n    if (window.location.search) {\r\n      let params: { [key: string]: string } = {}\r\n      for (const [key, value] of searchParams) {\r\n        if (params[key]) {\r\n          params[key] = params[key] + \"|\" + value\r\n        } else {\r\n          params[key] = value\r\n        }\r\n      } \r\n      dispatch(setFilters({ ...params }))\r\n      dispatch(setData())\r\n    }\r\n    isMounted.current = true\r\n    // eslint-disable-next-line\r\n  }, [])\r\n  useEffect(() => {\r\n    if (items.length === 0 && currPage !== 1) {\r\n      dispatch(setPage(1))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [items])\r\n  return (\r\n    <div className=\"page__container container\">\r\n      <div className=\"page__catalog cat-page\">\r\n        <div className=\"cat-page__aside\">\r\n          <div className=\"cat-page__filter filter-cat\">\r\n            <div ref={filterInnerRef} className=\"filter-cat__inner\">\r\n              <div className=\"filter-cat__header\">\r\n                <div className=\"filter-cat__title\">Фильтр</div>\r\n                <div className=\"filter-cat__icon\"></div>\r\n              </div>\r\n              <Filter start={priceStart} end={priceEnd} />\r\n              <div className=\"filter-cat__text\">\r\n                Выбирайте в первую очередь важные для вас фильтры. Применения большого колличества второстепенных фильтров может исключить интересные для вас варианты\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"cat-page__content\">\r\n          <div onClick={()=>filterIconOnClick()} className=\"cat-page__filter--mobile\">Фильтр</div>\r\n          <Search />\r\n          {selectedFilters.length > 0 && <ChoiceFilter selectedFilters={selectedFilters} />}\r\n          <Sort sortProperty={sortProperty} orderProperty={orderProperty} setSort={setSort} />\r\n          <div className=\"cat-page__catalog catalog\">\r\n            <div className=\"catalog__items\">\r\n              {items.length ? items.map(item => <ProductBlock key={item.id}\r\n                {...item} />) : [...new Array(12)].map((item, i) => <Skeleton key={i} />)}\r\n            </div>\r\n          </div>\r\n          <Pagination setPage={setPage} totalCount={totalCount} currPage={currPage} itemsPerPage={itemsPerPage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default CatalogPage"],"names":["selectedFilters","dispatch","useAppDispatch","className","map","item","i","onClick","el","filterArr","setFiltersAndInputs","choiceItemOnCheck","translitname","translitvalue","name","value","xmlns","viewBox","d","start","end","nouisliderRef","useRef","inputs","useAppSelector","state","filters","useEffect","current","noUiSlider","set","onReset","e","preventDefault","resetFiltersAndInputs","action","range","min","max","connect","onChange","console","log","setPriceStart","parseInt","setPriceEnd","setData","instanceRef","instance","Number","target","replace","onChangeStartValue","id","type","String","trim","onChangeEndValue","clsx","idx","secFilterHeader","document","querySelectorAll","secFilterBody","smoothDrop","filterDrop","properties","checked","count","inputOnCheck","firstPage","lastPage","setPage","totalCount","currPage","itemsPerPage","pagesList","pagesCount","Math","ceil","pagesSiblingsList","spread","push","disabled","window","scrollTo","top","behavior","onChangePage","searchValue","useState","setValue","inputRef","isChanged","useDispatch","timer","setTimeout","setSearchValue","clearTimeout","onChangeValue","ref","items","sortProperty","orderProperty","priceStart","priceEnd","isMounted","filterInnerRef","navigate","useNavigate","searchParams","useSearchParams","entries","forEach","foundItems","filter","length","filterItems","useMemo","values","join","params","fetchFiltersProducts","location","search","key","setFilters","filterCat","querySelector","filterCatIcon","classList","add","body","addEventListener","_e","path","includes","remove","filterIconOnClick","Sort","setSort","ProductBlock","Array","Skeleton"],"sourceRoot":""}